name: C/C++ CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get update 
        sudo apt-get install -y build-essential cmake libssl-dev curl expect-dev expect
        git submodule update --init --recursive
    - name: Configure CMake
      run: |
        cmake -S . -B build
    - name: Build server
      run: |
        cmake --build build --target server
    - name: Build client
      run: |
        cmake --build build --target client
    - name: Deploy
      run: |
        mkdir -p deploy
        cp ./build/server deploy/server
        cp ./build/client deploy/client
    - name: Run server tests
      run: |
        deploy/server &  # запуск сервера в фоновом режиме
        sleep 3  # ожидание, чтобы сервер успел запуститься
        curl http://localhost:7777/users  # выполнение запроса к серверу
        kill %1  # остановка сервера
    - name: Run client tests
      run: |
        expect -c '
        spawn ./deploy/client
        expect {
         -re ".*" {
         # Output received, continue
         }
        }
        send "127.0.0.1\n"
        send "7777\n"
        expect eof
        '
    - name: Package the binaries
      run: |
        sh create_debpkg.sh
    - name: Upload Deb Package to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: ./http-server-dcsa.deb  # Укажите путь к созданному deb-пакету
    - name: Package the binaries client
      run: |
        sh create_dpkg_client.sh
    - name: Upload client Deb Package to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app-client
        path: ./http-server-client-dcsa.deb  # Укажите путь к созданному deb-пакету

    # Шаги для сборки бинарных файлов
    - uses: actions/checkout@v2
      
    # Логинимся в Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Сборка Docker-образа
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/http-server:latest .

    # Публикация Docker-образа на Docker Hub
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/http-server:latest

    # Тесты сервера
    - name: Run server tests in Docker container
      run: |
        docker run -d -p 7777:7777 --name test-server ${{ secrets.DOCKER_USERNAME }}/http-server:latest
        sleep 5  # ожидание для запуска сервера
        curl http://localhost:7777/users
        docker stop test-server
        docker rm test-server